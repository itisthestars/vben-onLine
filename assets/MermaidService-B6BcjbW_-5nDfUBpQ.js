var v=Object.defineProperty;var u=Object.getOwnPropertySymbols;var w=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable;var p=(c,e,t)=>e in c?v(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t,f=(c,e)=>{for(var t in e||(e={}))w.call(e,t)&&p(c,t,e[t]);if(u)for(var t of u(e))y.call(e,t)&&p(c,t,e[t]);return c};var m=(c,e,t)=>new Promise((a,i)=>{var s=r=>{try{n(t.next(r))}catch(l){i(l)}},o=r=>{try{n(t.throw(r))}catch(l){i(l)}},n=r=>r.done?a(r.value):Promise.resolve(r.value).then(s,o);n((t=t.apply(c,e)).next())});import{_ as S}from"./entry/index-D1R5ealb.js";import"./vue-CZYcLuVH.js";import"./antd-BA4tRdrP.js";class E{constructor(e={}){this.config=e,this.mermaidInstance=null,this.isLoading=!1,this.lastValidResult="",this.viewStateMap=new WeakMap,this.containerHeight=400}loadMermaid(){return m(this,null,function*(){if(this.mermaidInstance)return this.mermaidInstance;if(this.isLoading)return new Promise(e=>{const t=()=>{this.mermaidInstance?e(this.mermaidInstance):setTimeout(t,50)};t()});this.isLoading=!0;try{const{default:e}=yield S(()=>m(this,null,function*(){const{default:t}=yield import("./mermaid.esm.min-DHCPna84.js");return{default:t}}),[]);return e.initialize(f({theme:this.config.theme||"default",startOnLoad:!1,suppressErrorRendering:!0},this.config)),this.mermaidInstance=e,e}catch(e){throw new Error("Failed to load mermaid library")}finally{this.isLoading=!1}})}renderToContainer(e,t,a="light"){return m(this,null,function*(){const i=yield this.renderMermaid(t,a);e.innerHTML=i;const s=e.querySelector("svg");s&&(this.initViewState(e,s),this.applyTransform(e,s),s.addEventListener("mousedown",o=>this.onSvgMouseDown(o,e,s)))})}initViewState(e,t){let a=t.getAttribute("viewBox"),i=0,s=0;if(a){const l=a.split(/\s+/);i=parseFloat(l[2]),s=parseFloat(l[3])}else i=t.width.baseVal.value||t.getBoundingClientRect().width,s=t.height.baseVal.value||t.getBoundingClientRect().height;const o=e.clientWidth||0,n=this.containerHeight;let r=1;i&&s&&o&&n&&(r=Math.min(o/i,n/s,1)),this.viewStateMap.set(e,{scale:r,offsetX:0,offsetY:0,dragging:!1,dragStart:{x:0,y:0},lastOffset:{x:0,y:0}})}applyTransform(e,t){const a=this.viewStateMap.get(e);a&&(t.style.position="absolute",t.style.left="50%",t.style.top="50%",t.style.transform=`translate(-50%, -50%) translate(${a.offsetX}px, ${a.offsetY}px) scale(${a.scale})`,t.style.transformOrigin="center center",t.style.cursor=a.dragging?"grabbing":"grab")}zoomIn(e){const t=e.querySelector("svg"),a=this.viewStateMap.get(e);t&&a&&(a.scale=Math.min(a.scale+.2,3),this.applyTransform(e,t))}zoomOut(e){const t=e.querySelector("svg"),a=this.viewStateMap.get(e);t&&a&&(a.scale=Math.max(a.scale-.2,.2),this.applyTransform(e,t))}reset(e){const t=e.querySelector("svg");t&&(this.initViewState(e,t),this.applyTransform(e,t))}download(e,t="diagram.png"){return m(this,null,function*(){const a=e.querySelector("svg");if(a)try{const i=a.cloneNode(!0),s=new XMLSerializer().serializeToString(i),o=`data:image/svg+xml;charset=utf-8,${encodeURIComponent(s)}`,n=new Image;yield new Promise((h,g)=>{n.onload=()=>h(),n.onerror=d=>g(new Error("Image loading failed")),n.src=o});const r=document.createElement("canvas"),l=r.getContext("2d");if(!l)throw new Error("Canvas context not available");r.width=n.width*2,r.height=n.height*2,l.fillStyle="white",l.fillRect(0,0,r.width,r.height),l.drawImage(n,0,0),r.toBlob(h=>{if(!h)return;const g=URL.createObjectURL(h),d=document.createElement("a");d.href=g,d.download=t,document.body.appendChild(d),d.click(),setTimeout(()=>{document.body.removeChild(d),URL.revokeObjectURL(g)},100)},"image/png")}catch(i){}})}onSvgMouseDown(e,t,a){const i=this.viewStateMap.get(t);if(!i)return;i.dragging=!0,i.dragStart={x:e.clientX,y:e.clientY},i.lastOffset={x:i.offsetX,y:i.offsetY};const s=n=>this.onSvgMouseMove(n,t,a),o=()=>this.onSvgMouseUp(t,a,s,o);document.addEventListener("mousemove",s),document.addEventListener("mouseup",o),this.applyTransform(t,a)}onSvgMouseMove(e,t,a){const i=this.viewStateMap.get(t);!i||!i.dragging||(i.offsetX=i.lastOffset.x+(e.clientX-i.dragStart.x),i.offsetY=i.lastOffset.y+(e.clientY-i.dragStart.y),this.applyTransform(t,a))}onSvgMouseUp(e,t,a,i){const s=this.viewStateMap.get(e);s&&(s.dragging=!1,document.removeEventListener("mousemove",a),document.removeEventListener("mouseup",i),this.applyTransform(e,t))}renderMermaid(e,t="light"){return m(this,null,function*(){try{const a=yield this.loadMermaid();this.config.theme!==t&&(this.config.theme=t,a.initialize(f({startOnLoad:!1,suppressErrorRendering:!0,theme:t==="dark"?"dark":"default"},this.config)));const i=`mc_mermaid_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,{svg:s}=yield a.render(i,e);return this.lastValidResult=s,s}catch(a){return this.lastValidResult}})}}export{E as MermaidService};
